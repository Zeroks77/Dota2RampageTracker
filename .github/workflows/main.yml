name: Daily Run

on:
  schedule:
    - cron: '0 0 * * *' # Runs at midnight UTC every day
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  contents: write

jobs:
  run-rampage-tracker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET SDKs (8 and 9)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Restore dependencies
        run: dotnet restore RampageTracker.sln

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore RampageTracker.sln

      - name: Test
        run: dotnet test --configuration Release --no-build --nologo RampageTracker.sln

      - name: Prepare players.json from secret (not committed)
        shell: bash
        env:
          PLAYERS: ${{ secrets.PLAYERS }}
        run: |
          if [ -n "${PLAYERS}" ]; then
            # Accept either a JSON array (e.g. [1,2,3]) or comma/semicolon separated ids (e.g. 1,2,3)
            if [[ "${PLAYERS}" =~ ^\[.*\]$ ]]; then
              echo "${PLAYERS}" > players.json
            else
              IFS=',' read -ra IDS <<< "${PLAYERS//;/,}"
              JSON="["; SEP=""
              for id in "${IDS[@]}"; do
                id_trim=$(echo "$id" | xargs)
                if [ -n "$id_trim" ]; then
                  JSON+="$SEP$id_trim"; SEP=",";
                fi
              done
              JSON+="]"
              echo "$JSON" > players.json
            fi
          fi

      - name: Run Rampage Tracker (new)
        env:
          OPENDOTA_API_KEY: ${{ secrets.API_KEY }}
        run: dotnet run --project src/RampageTracker.csproj --configuration Release --no-build -- new

      - name: Clean up temporary secret files
        if: always()
        run: |
          rm -f players.json .env apikey.txt || true

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes (if any)
        shell: bash
        run: |
          git add -A
          # Ensure secret files are never committed
          git reset -- players.json .env apikey.txt || true
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "Daily update [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
